---
import { getCollection } from "astro:content";
import type { ContentEntryMap } from "astro:content";
import type { SortType } from "#utils/types";
import { PAGINATION_COUNT } from "#utils/site-config";
export type Props = {
  collection: keyof ContentEntryMap;
  itemsSize?: number;
  itemsPerPage?: number;
  currentPage?: number;
  to?: string;
};

const { collection } = Astro.props;

const results = (await getCollection(collection))
  .filter(({ data }) => {
    return data.draft === false;
  })
  .sort(
    (a: SortType, b: SortType) =>
      b.data.pubDate.getTime() - a.data.pubDate.getTime()
  );

const itemsPerPage = Astro.props.itemsPerPage || PAGINATION_COUNT || 3;
const currentPage = Astro.props.currentPage || 1;
const itemsSize = results.length;
const to = Astro.props.to || "posts";

const totalPages = Math.ceil(itemsSize / itemsPerPage);
const pageNumbers = Array.from({ length: totalPages }, (_, i) => i + 1);
---

<ul data-list="unstyled inline">
  {
    pageNumbers.map((item) => {
      return (
        <li>
          <a href={`/${to}/${item}`}>{item}</a>
        </li>
      );
    })
  }
</ul>
