---
import { getCollection } from "astro:content";
import { PAGINATION_COUNT } from "#utils/site-config";
import Layout from "#layouts/Layout.astro";
import BlogPosts from "#components/astro/BlogPosts.astro";
import Pagination from "#components/astro/Pagination.astro";
import type { TODO } from "#utils/types.js";

type Props = {
  pageSize: number;
};

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("posts", ({ data }) => {
    return data.draft !== true;
  });

  const published = allPosts.sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
  );
  return paginate(published, { pageSize: PAGINATION_COUNT });
}

const pageSize = PAGINATION_COUNT;
const { page } = Astro.props as TODO;
---

<Layout pageTitle="Blog Posts">
  {
    page?.data.map((post: TODO) => (
      <article>
        <BlogPosts
          url={post.slug}
          title={post.data.title}
          description={post.data.description}
        />
      </article>
    ))
  }
  <nav>
    <div>
      {page?.url?.prev ? <a href={page?.url?.prev}>Previous</a> : "Previous"}
    </div>
    <Pagination collection="posts" itemsPerPage={pageSize} />
    <div>
      {page?.url?.next ? <a href={page?.url?.next}>Next </a> : "Next"}
    </div>
  </nav>
</Layout>
